--Docker images start from a base image. The base image should include the platform depedencies required by your application , for example
-- having JVM or CLR installed .

-- In this example , our base  image is the Alpine version of Nginx . This provides the configured web server on the Linux Alpine distribution  

FROM nginx:alpine
COPY . /usr/share/nginx/html

-- The build command takes in some different parameters.
-- The format is docker build -t <build directory>.
$docker build -t webserver-image:v1 . J

$docker images J

################################################################################################################################################
#The built image can be launched in a consistent way to other Docker Images. When a container launches , it's sandboxed from other processes and #networks on the host. When starting a container you need to give it permission and access to what it requires.
#################################################################################################################################################

#launch our newly built image providing the friendly name tags. As it's a web server, bind port 80 to our host using the -p parameter

$docker run -d -p 80:80 webserver-image:v1 J

#Once started, you'll be able to access the result of port 80 via curl docker J

$curl docker

--To render the requests in the browser use the following links

--https://2886795286-80-cykoria03.environments.katacoda.com/
